@using OnepayMVCTest.Models;

@{
    ViewBag.Title = "Carro de Compras";
}
<form class="bg0 p-t-75 p-b-85">
    <div class="container">
        <div class="row">
            <div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
                <div class="m-l-25 m-r--38 m-lr-0-xl">
                    <div class="wrap-table-shopping-cart">
                        <table class="table-shopping-cart">
                            <tr class="table_head">
                                <th class="column-1">Producto</th>
                                <th class="column-2"></th>
                                <th class="column-3">Precio</th>
                                <th class="column-4">Cantidad</th>
                                <th class="column-5">Total</th>
                            </tr>

                            @{var total = 0;}
                            @foreach (Product p in ViewBag.Cart)
                            {
                                <tr class="table_row">
                                    <td class="column-1">
                                        <div class="how-itemcart1">
                                            <img src=@p.ImagePath alt="IMG">
                                        </div>
                                    </td>
                                    <td class="column-2">@p.Name</td>
                                    <td class="column-3">@string.Format("{0:C}", @p.Price)</td>
                                    <td class="column-4">@p.Quantity</td>
                                    <td class="column-5">@string.Format("{0:C}", p.Price * p.Quantity)</td>

                                    @{total += p.Price * p.Quantity;}
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
                <div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm" id="qr">
                    <div style="display: none" id="loading"><img src="../../images/loading.gif" /></div>
                    <h4 class="mtext-109 cl2 p-b-30">
                        Total Compra
                    </h4>
                    <div class="flex-w flex-t bor12 p-b-13">
                        <div class="size-208">
                            <span class="stext-110 cl2">
                                Subtotal:
                            </span>
                        </div>
                        <div class="size-209">
                            <span class="mtext-110 cl2">
                                @String.Format("{0:C}", total)
                            </span>
                        </div>
                    </div>
                    <div class="flex-w flex-t p-t-27 p-b-33">
                        <div class="size-208">
                            <span class="mtext-101 cl2">
                                Total:
                            </span>
                        </div>
                        <div class="size-209 p-t-1">
                            <span class="mtext-110 cl2">
                                @String.Format("{0:C}", total)
                            </span>
                        </div>
                    </div>
                    <div class="size-209 p-t-1">
                    </div>
                    <div onclick="transactionCreate()" class="flex-c-m stext-101 cl0 size-116 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer">
                        <img src="../../images/icons/logo_onepay_white.png"> &nbsp; Pagar con OnePay
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script type="text/javascript">
    (function (o, n, e, p, a, y) {
        var s = n.createElement(p);
        s.type = "text/javascript";
        s.src = e;
        s.onload = s.onreadystatechange = function () {
            if (!o && (!s.readyState
                || s.readyState === "loaded")) {
                y();
            }
        };
        var t = n.getElementsByTagName("script")[0];
        p = t.parentNode;
        p.insertBefore(s, t);
    })(false, document, "https://cdn.rawgit.com/TransbankDevelopers/transbank-sdk-js-onepay/v1.3.2/lib/onepay.min.js", "script",
        window, function () {
            console.log("onepay js lib sucess loaded");
        });

    function showLoadingImage() {
        let html = document.getElementById("qr");
        html.innerHTML = "";
        let loading = new Image(200, 200);
        loading.src = "../../images/loading.gif";
        html.appendChild(loading);
    }

    function transactionCreate() {
        showLoadingImage();

        $.ajax({
            type: "POST",
            url: "../../Transaction/Create",
            async: true,
            success: function (data) {
                console.log(data);
                // convert json to object
                let transaction = JSON.parse(data);
                transaction["paymentStatusHandler"] = {
                    ottAssigned: function () {
                        // callback transacción asinada
                        console.log("Transacción asignada.");
                        showLoadingImage();
                    },
                    authorized: function (occ, externalUniqueNumber) {
                        // callback transacción autorizada
                        console.log("Occ : " + occ);
                        console.log("ExternalUniqueNumber : " + externalUniqueNumber);

                        let params = {
                            Occ: occ,
                            ExternalUniqueNumber: externalUniqueNumber
                        };

                        let httpUtil = new HttpUtil();
                        httpUtil.sendPostRedirect("../../Transaction/Commit", params);
                    },
                    canceled: function () {
                        // callback rejected by user
                        console.log("transacción cancelada por el usuario");
                        onepay.drawQrImage("qr");
                    },
                    authorizationError: function () {
                        // cacllback authorization error
                        console.log("error de autorizacion");
                    },
                    unknown: function () {
                        // callback to any unknown status recived
                        console.log("estado desconocido");
                    }
                };

                let onepay = new Onepay(transaction);
                onepay.drawQrImage("qr");
            },
            error: function (data) {
                console.log("something is going wrong");
            }
        });
    }
</script>